@inject NavigationManager navman
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthStateProvider

<div class="top-row p-3 navbar">
    <div class="container-fluid text-fancy">
        <a class="text-white text-end" href="/">DFFOO Planner</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-row">
        <div class="nav-item p-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-people" aria-hidden="true"></span> Champions
            </NavLink>
        </div>
        <div class="nav-item p-3">
            <NavLink class="nav-link" href="spheres">
                <span class="oi oi-play-circle" aria-hidden="true"></span> Spheres
            </NavLink>
        </div>
        <div class="nav-item p-3">
            <NavLink class="nav-link" href="how-to-fail-lufs">
                <span class="oi oi-play-circle" aria-hidden="true"></span> How to fail Lufs
            </NavLink>
        </div>
        <div class="nav-item p-3">
            <AuthorizeView>
                <Authorized>
                    <button @onclick="Logout" class="btn btn-danger">Logout</button>
                </Authorized>
                <NotAuthorized>
                    <button @onclick="Login" class="btn btn-primary">Login ¦ Signup</button>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

     void Login()
    {
        navman.NavigateTo("login");
    }

    async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("token");
        await AuthStateProvider.GetAuthenticationStateAsync();
    }
}
